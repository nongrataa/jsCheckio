/*
Дан непустой массив целых чисел (X). В этой задаче вам нужно вернуть массив, состоящий только из неуникальных элементов данного массива.
Для этого необходимо удалить все уникальные элементы (которые присутствуют в данном массиве только один раз).
Для решения этой задачи не меняйте оригинальный порядок элементов.
Пример: [1, 2, 3, 1, 3], где 1 и 3 неуникальные элементы и результат будет [1, 3, 1, 3].

Пример:

nonUniqueElements([1, 2, 3, 1, 3]) == [1, 3, 1, 3]
nonUniqueElements([1, 2, 3, 4, 5]) == []
nonUniqueElements([5, 5, 5, 5, 5]) == [5, 5, 5, 5, 5]
nonUniqueElements([10, 9, 10, 10, 9, 8]) == [10, 9, 10, 10, 9]

Как это используется: Эта задача поможет вам понять, как манипулировать массивами.
Это полезный базис для решения более сложных задач.
Также эта идея может быть легко обобщена для реальных задач.
Для примера: если вам необходимо очистить статистику от редко встречающихся элементов (шум).

Предусловия:
0 < len(data) < 1000

 */

const nonUniqueElements = (data)=>{
    let newArr=[]
    for (let i=0;i<data.length;i++){
        let a=data[i]
        for (let j=0;j<data.length;j++){
            if ((a==data[j]) && (i!==j)){
                newArr.push(data[j])
                break
            }
        }
    }
    return newArr
}

nonUniqueElements([1,2,1,4,5,3,7,4,1,3,4,2,8,8])
nonUniqueElements([1, 2, 3, 4, 5])
nonUniqueElements([5, 5, 5, 5, 5])
nonUniqueElements([10, 9, 10, 10, 9, 8])